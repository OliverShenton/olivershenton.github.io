/* ! Header Styles */

#header {
  padding: 2rem 1rem;
  position: fixed;
  width: 100%;
  margin: auto;
  top: 0;
}

#header-inner-container {
  max-width: 1200px;
  margin: auto;
}

#header-button {
  display: none;
}

#header-nav {
  display: flex;
  flex-direction: row;
  text-align: end;
}

#header-nav span a {
  text-decoration: none;
  color: white;
  font-weight: bold;
  display: block;
  position: relative;
  padding: 0.2em 0;
  overflow: hidden;
  margin-left: 1.5rem;
}

#header-nav span a::after {
  content: '';
  position: absolute;
  width: 0%;
  height: 2px;
  left: 0;
  bottom: 0;
  background: white;
  transition: width 0.5s ease-in-out;
}

#header-nav span a:hover::after {
  width: 100%;
}

.header-nav {
  display: none;
}

/* ! Global Section Styles */

#about-me,
#projects,
#skills,
#experience,
#contact {
  padding: 6rem 1.5rem;
}

#about-me-inner-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* ! Hero Section */

#hero {
  margin-top: 92px;
  padding: 6rem 1.5rem;
}

#hero-inner-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

#hero-inner-container h1 {
  font-size: 4em;
  text-align: left;
}

.hero-hr {
  width: 90%;
}

.hero-content-container {
  display: flex;
  justify-content: left;
  padding: 0;
}

.hero-content-details p {
  text-align: left;
  padding-left: 50px;
}

#hero-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 200%;
  height: 100%;
  background: linear-gradient(
    120deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.6) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: skewX(-20deg);
  z-index: 0;
  opacity: 0;
  pointer-events: none;
  transition: opacity 2s ease-out;
}

#hero-button.sheen-active::before {
  opacity: 1;
  animation: sheen-move 2s ease-in-out forwards;
}

@keyframes sheen-move {
  0% {
    left: -100%;
  }
  90% {
    left: 100%;
  }
  100% {
    left: 100%;
    opacity: 0;
  }
}

#hero-button span {
  position: relative;
  z-index: 1;
}

.right-column {
  flex: 1;
  text-align: right;
}

.right-column img {
  max-width: 90%;
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-100px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(100px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.left-animation {
  animation: fadeInLeft 3s ease-out;
  opacity: 0;
  animation-fill-mode: forwards;
}

.right-animation {
  animation: fadeInRight 3s ease-out;
  opacity: 0;
  animation-fill-mode: forwards;
}

/* ! About Me Section */

@keyframes bounceWithTwoPeaks {
  0%,
  100% {
    transform: translateY(0);
  }
  30% {
    transform: translateY(-10px);
  }
  50% {
    transform: translateY(0);
  }
  70% {
    transform: translateY(-5px);
  }
  90% {
    transform: translateY(0);
  }
}

.circle.bouncing {
  animation: bounceWithTwoPeaks 0.8s ease-in-out;
  animation-fill-mode: forwards;
}

#about-me-inner-container .right-column {
  margin-left: 10%;
  text-align: left;
}

/* ! Projects Section */

#projects-card-container-small {
  display: none;
}

#projects-card-container-large {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
}

.card {
  display: grid;
  place-items: center;
  max-width: 21.875rem;
  margin-bottom: 2rem;
  height: 28.125rem;
  overflow: hidden;
  border-radius: 0.625rem;
  box-shadow: 0.25rem 0.25rem 0.5rem rgba(0, 0, 0, 0.25);
}

.card > * {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.card-background {
  object-fit: cover;
  max-width: 100%;
  height: 100%;
}

.card-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-self: flex-end;
  height: 55%;
  width: 100%;
  padding: 12% 1.25rem 1.875rem;
  margin-top: auto;
  transform: translateY(10%);
  transition: transform 500ms ease-out;
  background: linear-gradient(
    180deg,
    hsla(0, 0%, 0%, 0) 0%,
    hsla(0, 0%, 0%, 0.3) 10%,
    hsl(0, 0%, 0%) 100%
  );
}

.card-content-container {
  --flow-space: 1.25rem;
}

.card-title {
  position: relative;
  width: fit-content;
  width: -moz-fit-content;
  color: white;
}

.card-title::after {
  content: '';
  position: absolute;
  height: 0.3125rem;
  width: calc(100% + 1.25rem);
  bottom: calc((1.25rem - 0.5rem) * -1);
  left: -1.25rem;
  background-color: white;
}

.card-button {
  padding: 0.75em 1.6em;
  width: fit-content;
  width: -moz-fit-content;
  font-variant: small-caps;
  font-weight: bold;
  border-radius: 0.45em;
  border: none;
  background-color: #b8b8b8;
  font-size: 1.125rem;
  color: #333;
  cursor: pointer;
}

.card-button:hover {
  background-color: white;
}

.card-button:focus {
  outline: 2px solid black;
  outline-offset: -5px;
}

.card {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.card.pop-up {
  opacity: 1;
  transform: translateY(0);
}

@media (any-hover: hover) and (any-pointer: fine) {
  .card-content {
    transform: translateY(62%);
    transition: transform 500ms ease-out;
    transition-delay: 500ms;
  }

  .card-title::after {
    opacity: 0;
    transform: scaleX(0);
    transition: opacity 1000ms ease-in, transform 500ms ease-out;
    transition-delay: 500ms;
    transform-origin: right;
  }

  .card-background {
    transition: transform 500ms ease-in;
  }

  .card-content--container > :not(.card-title),
  .card-button {
    opacity: 0;
    transition: transform 500ms ease-out, opacity 500ms ease-out;
  }

  .card:hover,
  .card:focus-within {
    transform: scale(1.05);
    transition: transform 500ms ease-in;
  }

  .card:hover .card-content,
  .card:focus-within .card-content {
    transform: translateY(0);
    transition: transform 500ms ease-in;
  }

  .card:focus-within .card-content {
    transition-duration: 0ms;
  }

  .card:hover .card-background,
  .card:focus-within .card-background {
    transform: scale(1.3);
  }

  .card:hover .card-content-container > :not(.card-title),
  .card:hover .card-button,
  .card:focus-within .card-content-container > :not(.card-title),
  .card:focus-within .card-button {
    opacity: 1;
    transition: opacity 500ms ease-in;
    transition-delay: 1000ms;
  }

  .card:hover .card-title::after,
  .card:focus-within .card-title::after {
    opacity: 1;
    transform: scaleX(1);
    transform-origin: left;
    transition: opacity 500ms ease-in, transform 500ms ease-in;
    transition-delay: 500ms;
  }
}
